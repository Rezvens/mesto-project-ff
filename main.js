(()=>{"use strict";var __webpack_modules__={732:()=>{eval("\n;// CONCATENATED MODULE: ./src/utils/checkResponse.js\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));\n}\n;// CONCATENATED MODULE: ./src/scripts/api.js\n\n\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-21',\n  headers: {\n    authorization: 'e64358cb-e014-41f7-8927-e967308e67f0',\n    'Content-Type': 'application/json'\n  }\n};\nvar getProfileData = fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n  headers: config.headers\n}).then(checkResponse);\nvar getCardsData = fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n  headers: config.headers\n}).then(checkResponse);\nvar serverData = [getProfileData, getCardsData];\nfunction deleteDataCard(id) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(id), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(checkResponse);\n}\nfunction putDataLikeCard(id) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(id), {\n    method: 'PUT',\n    headers: config.headers\n  }).then(checkResponse);\n}\nfunction deleteDataLikeCard(id) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(id), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(checkResponse);\n}\nfunction postDataCard(name, link) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(checkResponse);\n}\nfunction patchDataProfile(name, about) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(checkResponse);\n}\nfunction patchDataAvatar(link) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: link\n    })\n  }).then(checkResponse);\n}\n;// CONCATENATED MODULE: ./src/scripts/cardAddForm.js\n\n\nfunction cardAddForm(renderLoading, form, nameInput, linkInput, placesList, createCard, removeCard, closePopup, openImagePopup, likeCard, evt) {\n  evt.preventDefault();\n  var openedPopup = evt.target.closest('.popup');\n  var saveButton = openedPopup.querySelector('.popup__button');\n  saveButton.classList.add('button-inactive');\n  renderLoading(form, true);\n  postDataCard(nameInput.value, linkInput.value).then(function (data) {\n    var card = createCard('', '', '', [], nameInput.value, linkInput.value, nameInput.value, removeCard, likeCard, openImagePopup);\n    card._id = data._id;\n    placesList.prepend(card);\n    closePopup(openedPopup);\n    form.reset();\n  }).catch(function (error) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(error));\n  }).finally(function () {\n    renderLoading(form, false);\n  });\n}\n;// CONCATENATED MODULE: ./src/scripts/card.js\n\n\nfunction createCard(profileId, ownerId, id, likes, name, link, alt, removeCardFunc, likeCardFunc, openImagePopupFunc) {\n  var cardTemplate = document.querySelector('#card-template').content;\n  var card = cardTemplate.querySelector('.card').cloneNode(true);\n  card.querySelector('.card__title').textContent = name;\n  card.querySelector('.card__image').src = link;\n  card.querySelector('.card__image').alt = alt;\n  card.querySelector('.likes').textContent = likes.length;\n  card._id = id;\n  card.name = name;\n  card.likes = likes;\n  var trashButton = card.querySelector('.card__delete-button');\n  if (ownerId === profileId) {\n    trashButton.addEventListener('click', removeCardFunc);\n  } else {\n    trashButton.classList.add('visually-hidden');\n  }\n  card.addEventListener('click', likeCardFunc);\n  card.likes.some(function (like) {\n    if (like._id === profileId) {\n      var likeButton = card.querySelector('.card__like-button');\n      likeButton.classList.add('card__like-button_is-active');\n    }\n  });\n  card.addEventListener('click', openImagePopupFunc);\n  return card;\n}\nfunction likeCard(evt) {\n  if (evt.target.classList.contains('card__like-button')) {\n    var likeButton = evt.target;\n    var card = likeButton.closest('.card');\n    var likesCount = card.querySelector('.likes');\n    if (!likeButton.classList.contains('card__like-button_is-active')) {\n      putDataLikeCard(card._id).then(function () {\n        likeButton.classList.add('card__like-button_is-active');\n        likesCount.textContent = Number(likesCount.textContent) + 1;\n      }).catch(function (error) {\n        console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(error));\n      });\n    } else {\n      deleteDataLikeCard(card._id).then(function () {\n        likeButton.classList.remove('card__like-button_is-active');\n        likesCount.textContent = Number(likesCount.textContent) - 1;\n      }).catch(function (error) {\n        console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(error));\n      });\n    }\n  }\n}\nfunction removeCard(evt) {\n  var trashButton = evt.target;\n  var card = trashButton.closest('.card');\n  deleteDataCard(card._id).then(function () {\n    card.remove();\n  }).catch(function (error) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(error));\n  });\n}\n;// CONCATENATED MODULE: ./src/scripts/modal.js\n\nfunction openPopup(popup) {\n  // to-do валидировать поля после открытия попапа\n  popup.classList.add('popup_is-opened');\n  document.addEventListener('keydown', escHandler);\n  popup.addEventListener('mousedown', overlayHandler);\n}\n;\nfunction overlayHandler(evt) {\n  if (evt.target === evt.currentTarget) {\n    var openedPopup = evt.target.closest('.popup');\n    closePopup(openedPopup);\n  }\n}\n;\nfunction escHandler(evt) {\n  if (evt.key === 'Escape') {\n    var openedPopup = document.querySelector('.popup_is-opened');\n    closePopup(openedPopup);\n  }\n}\n;\nfunction closePopup(openedPopup) {\n  openedPopup.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', escHandler);\n  openedPopup.removeEventListener('mousedown', overlayHandler);\n}\n;\nfunction renderLoading(form, isLoading) {\n  var saveButton = form.querySelector('.button');\n  if (isLoading) {\n    saveButton.textContent = 'Сохранение...';\n  } else {\n    saveButton.textContent = 'Сохранить';\n  }\n}\n;// CONCATENATED MODULE: ./src/scripts/profileEditForm.js\n\n\nfunction profileEditForm(form, title, description, closePopup, renderLoading, evt) {\n  evt.preventDefault();\n  renderLoading(form, true);\n  var nameInput = form.elements.name;\n  var jobInput = form.elements.description;\n  patchDataProfile(nameInput.value, jobInput.value).then(function () {\n    title.textContent = nameInput.value;\n    description.textContent = jobInput.value;\n    var openedPopup = evt.target.closest('.popup_is-opened');\n    closePopup(openedPopup);\n  }).catch(function (error) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(error));\n  }).finally(function () {\n    renderLoading(form, false);\n  });\n}\nfunction editAvatar(form, profileImage, closePopup, renderLoading, evt) {\n  evt.preventDefault();\n  renderLoading(form, true);\n  patchDataAvatar(form.elements.avalink.value).then(function () {\n    profileImage.style.backgroundImage = \"url(\".concat(form.elements.avalink.value);\n    var openedPopup = evt.target.closest('.popup');\n    closePopup(openedPopup);\n    form.reset();\n  }).catch(function (error) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(error));\n  }).finally(function () {\n    renderLoading(form, false);\n  });\n}\n;// CONCATENATED MODULE: ./src/scripts/validation.js\n\nfunction enableValidation(settings) {\n  var formList = Array.from(document.querySelectorAll(settings.formSelector));\n  formList.forEach(function (form) {\n    setEventListeners(form, settings);\n  });\n}\nfunction setEventListeners(form, settings) {\n  var inputList = Array.from(form.querySelectorAll(settings.inputSelector));\n  var button = form.querySelector(settings.submitButtonSelector);\n  toggleButtonState(inputList, button);\n  inputList.forEach(function (input) {\n    input.addEventListener('input', function () {\n      isValid(form, input);\n      toggleButtonState(inputList, button);\n    });\n  });\n}\nfunction isValid(form, input) {\n  if (input.validity.patternMismatch) {\n    input.setCustomValidity(input.dataset.errorMessage);\n  } else {\n    input.setCustomValidity('');\n  }\n  if (!input.validity.valid) {\n    showInputError(form, input, input.validationMessage);\n  } else {\n    hideInputError(form, input);\n  }\n}\nfunction showInputError(form, input, errorMessage) {\n  var error = form.querySelector(\".\".concat(input.id, \"-error\"));\n  input.classList.add('popup__input-error');\n  error.textContent = errorMessage;\n  error.classList.add('input__error-active');\n}\nfunction hideInputError(form, input) {\n  var error = form.querySelector(\".\".concat(input.id, \"-error\"));\n  input.classList.remove('popup__input-error');\n  error.classList.remove('input_error-active');\n  error.textContent = '';\n}\nfunction hasInvalidInput(inputList) {\n  return inputList.some(function (input) {\n    return !input.validity.valid;\n  });\n}\nfunction toggleButtonState(inputList, button) {\n  if (hasInvalidInput(inputList)) {\n    button.setAttribute('disabled', '');\n    button.classList.add('button-inactive');\n    button.classList.remove('hover');\n  } else {\n    button.removeAttribute('disabled', '');\n    button.classList.remove('button-inactive');\n  }\n}\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\nvar placesList = document.querySelector('.places__list');\nvar profileForm = document.forms['edit-profile'];\nvar profileTitle = document.querySelector('.profile__title');\nvar profileDescription = document.querySelector('.profile__description');\nvar avatarForm = document.forms['edit-avatar'];\nvar profileImage = document.querySelector('.profile__image');\nprofileForm.addEventListener('submit', function (evt) {\n  profileEditForm(profileForm, profileTitle, profileDescription, closePopup, renderLoading, evt);\n});\nvar profileEditButton = document.querySelector('.profile__edit-button');\nvar popupEditProfile = document.querySelector('.popup_type_edit');\nprofileEditButton.addEventListener('click', function () {\n  profileForm.elements.name.value = profileTitle.textContent;\n  profileForm.elements.description.value = profileDescription.textContent;\n  openPopup(popupEditProfile);\n});\nvar cardForm = document.forms['new-place'];\nvar nameInput = cardForm.elements['place-name'];\nvar linkInput = cardForm.elements.link;\ncardForm.addEventListener('submit', function (evt) {\n  cardAddForm(renderLoading, cardForm, nameInput, linkInput, placesList, createCard, removeCard, closePopup, openImagePopup, likeCard, evt);\n});\nvar profileAddButton = document.querySelector('.profile__add-button');\nvar popupAddNewCard = document.querySelector('.popup_type_new-card');\nvar popupEditAvatar = document.querySelector('.popup_type_avatar');\nprofileAddButton.addEventListener('click', function () {\n  openPopup(popupAddNewCard);\n});\nprofileImage.addEventListener('click', function () {\n  openPopup(popupEditAvatar);\n});\navatarForm.addEventListener('submit', function (evt) {\n  editAvatar(avatarForm, profileImage, closePopup, renderLoading, evt);\n});\nvar popupZoomImage = document.querySelector('.popup_type_image');\nvar popupImage = document.querySelector('.popup__image');\nvar popupCaption = document.querySelector('.popup__caption');\nfunction openImagePopup(evt) {\n  if (evt.target.classList.contains('card__image')) {\n    openPopup(popupZoomImage);\n    var card = evt.target.closest('.card');\n    popupImage.setAttribute('src', evt.target.src);\n    popupImage.setAttribute('alt', evt.target.alt);\n    var cardTitle = card.querySelector('.card__title');\n    popupCaption.textContent = cardTitle.textContent;\n  }\n}\n;\nvar popupCloseButtons = document.querySelectorAll('.popup__close');\npopupCloseButtons.forEach(function (button) {\n  button.addEventListener('click', function (evt) {\n    var openedPopup = evt.target.closest('.popup');\n    closePopup(openedPopup);\n  });\n});\nvar settings = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input-error',\n  errorClass: 'input__error-active'\n};\nenableValidation(settings);\n\nPromise.all(serverData).then(function (results) {\n  var profile = results[0];\n  profileTitle.textContent = profile.name;\n  profileDescription.textContent = profile.about;\n  profileImage.style.backgroundImage = \"url(\".concat(profile.avatar);\n  var profileId = profile._id;\n  var cards = results[1];\n  cards.forEach(function (card) {\n    var cardContent = createCard(profileId, card.owner._id, card._id, card.likes, card.name, card.link, card.name, removeCard, likeCard, openImagePopup);\n    placesList.append(cardContent);\n  });\n}).catch(function (error) {\n  console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(error));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///732\n")}},__webpack_exports__={};__webpack_modules__[732]()})();